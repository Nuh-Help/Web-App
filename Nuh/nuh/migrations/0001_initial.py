# Generated by Django 2.1.1 on 2018-09-29 03:45

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GiveAccommodation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('what_accommodation', models.CharField(max_length=250)),
                ('does', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='GiveClothes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('what_clothes', models.CharField(max_length=250)),
                ('does', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='GiveFood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('what_food', models.CharField(max_length=250)),
                ('does', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='GiveHelp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other', models.CharField(default=False, max_length=500, null=True)),
                ('does', models.BooleanField(default=False)),
                ('does_other', models.BooleanField(default=False)),
                ('accommodation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nuh.GiveAccommodation')),
                ('clothes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nuh.GiveClothes')),
                ('food', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nuh.GiveFood')),
            ],
        ),
        migrations.CreateModel(
            name='GiveMedicine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('what_medicine', models.CharField(max_length=250)),
                ('does', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=8, default=0, max_digits=15)),
                ('longitude', models.DecimalField(decimal_places=8, default=0, max_digits=15)),
                ('give_help', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nuh.GiveHelp')),
            ],
        ),
        migrations.CreateModel(
            name='NeedAccommodation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('what_accommodation', models.CharField(max_length=250)),
                ('does', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='NeedClothes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('what_clothes', models.CharField(max_length=250)),
                ('does', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='NeedFood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('what_food', models.CharField(max_length=250)),
                ('does', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='NeedHelp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other', models.CharField(default=None, max_length=500, null=True)),
                ('does', models.BooleanField(default=False)),
                ('does_other', models.BooleanField(default=False)),
                ('accommodation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nuh.NeedAccommodation')),
                ('clothes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nuh.NeedClothes')),
                ('food', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nuh.NeedFood')),
            ],
        ),
        migrations.CreateModel(
            name='NeedMedicine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('what_medicine', models.CharField(max_length=250)),
                ('does', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='needhelp',
            name='medicine',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nuh.NeedMedicine'),
        ),
        migrations.AddField(
            model_name='info',
            name='need_help',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nuh.NeedHelp'),
        ),
        migrations.AddField(
            model_name='givehelp',
            name='medicine',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nuh.GiveMedicine'),
        ),
        migrations.AddField(
            model_name='user',
            name='pointer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nuh.Info'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
